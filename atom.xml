<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>焕小妹</title>
  
  <subtitle>bug</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-06-06T02:37:43.911Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>焕焕</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2020/06/06/MachineLearning/0-Convolution%20concept/"/>
    <id>http://yoursite.com/2020/06/06/MachineLearning/0-Convolution concept/</id>
    <published>2020-06-06T01:59:42.932Z</published>
    <updated>2020-06-06T02:37:43.911Z</updated>
    
    <content type="html"><![CDATA[<h1 id="对卷积的定义和意义的通俗解释"><a href="#对卷积的定义和意义的通俗解释" class="headerlink" title="对卷积的定义和意义的通俗解释"></a>对卷积的定义和意义的通俗解释</h1><p>教科书上一般定义函数<img src="https://www.zhihu.com/equation?tex=f%2Cg" alt="f,g">的卷积<img src="https://www.zhihu.com/equation?tex=%28f%2Ag%29%28n%29" alt="(f*g)(n)">如下：</p><p>连续形式：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cdisplaystyle+%28f%2Ag%29%28n%29%3D%5Cint+_%7B-%5Cinfty+%7D%5E%7B%5Cinfty+%7Df%28%5Ctau+%29g%28n-%5Ctau+%29d%5Ctau+%5C%5C" alt="\displaystyle (f*g)(n)=\int _{-\infty }^{\infty }f(\tau )g(n-\tau )d\tau \\"></p><p>离散形式：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cdisplaystyle+%28f%2Ag%29%28n%29%3D%5Csum+_%7B%5Ctau+%3D-%5Cinfty+%7D%5E%7B%5Cinfty+%7D%7Bf%28%5Ctau+%29g%28n-%5Ctau+%29%7D%5C%5C" alt="\displaystyle (f*g)(n)=\sum _{\tau =-\infty }^{\infty }{f(\tau )g(n-\tau )}\\"></p><ul><li><p>公式解释，先对g函数进行翻转，相当于在数轴上把g函数从右边褶到左边去，也就是卷积的“卷”的由来。</p></li><li><p>然后再把g函数平移到n，在这个位置对两个函数的对应点相乘，然后相加，这个过程是卷积的“积”的过程。</p></li></ul><p>这个只是从计算的方式上对公式进行了解释，从数学上讲无可挑剔，但进一步追问，为什么要先翻转再平移，这么设计有何用意？还是有点费解的。</p><p>好在有万能的互联网，尤其是知乎，CSDN这样的网站，很多的热心网友对卷积举了很多形象的例子进行了解释，如卷地毯、丢骰子、打耳光、存钱等等，参见知乎上这两个两个经典的问题，回答的人很多：</p><p><a href="https://www.zhihu.com/question/22298352/answer/228543288" target="_blank" rel="noopener">如何通俗易懂地解释<em>卷积</em>？</a><a href="https://www.zhihu.com/question/22298352" target="_blank" rel="noopener">https://www.zhihu.com/question/22298352</a></p><p><a href="https://www.zhihu.com/question/54677157/answer/141245297" target="_blank" rel="noopener"><em>卷积</em>为什么叫「卷」积？</a> <a href="https://www.zhihu.com/question/54677157" target="_blank" rel="noopener">https://www.zhihu.com/question/54677157</a></p><p>读完觉得非常生动有趣，但过细想想，还是感觉有些地方还是没解释清楚，甚至可能还有瑕疵，或者还可以改进（这些后面我会做一些分析）。</p><p>==明确一下，这篇文章主要想解释两个问题：==</p><ol><li><p><strong>卷积这个名词是怎么解释？“卷”是什么意思？“积”又是什么意思？</strong></p></li><li><p><strong>卷积背后的意义是什么，该如何解释？</strong></p></li></ol><h3 id="对卷积的理解"><a href="#对卷积的理解" class="headerlink" title="对卷积的理解"></a>对卷积的理解</h3><p>对卷积这个名词的理解：所谓两个函数的卷积，本质上就是先将一个函数翻转，然后进行滑动叠加。</p><p>在连续情况下，叠加指的是对两个函数的乘积求积分，在离散情况下就是加权求和，为简单起见就统一称为叠加。</p><p>整体看来是这么个过程：</p><p>​        翻转——&gt;滑动——&gt;叠加——&gt;滑动——&gt;叠加——&gt;滑动——&gt;叠加…..</p><p>多次滑动得到的一系列叠加值，构成了卷积函数。</p><p><strong>卷积的“卷”，指的的函数的翻转，从 <em>g(t)</em> 变成 <em>g(-t)</em> 的这个过程；</strong></p><p><strong>卷积的“积”，指的是滑动积分/加权求和。</strong></p><p>有些文章只强调滑动叠加求和，而没有说函数的翻转，我觉得是不全面的；有的文章对“卷”的理解其实是“积”，我觉得是张冠李戴。</p><p>==对卷积的意义的理解：==</p><ol><li><p>从“积”的过程可以看到，我们得到的叠加值，是个全局的概念。以<strong>信号分析</strong>为例，卷积的结果是不仅跟当前时刻输入信号的响应值有关，也跟过去所有时刻输入信号的响应都有关系，考虑了对过去的所有输入的效果的累积。在图像处理的中，卷积处理的结果，其实就是把每个像素周边的，甚至是整个图像的像素都考虑进来，对当前像素进行某种加权处理。所以说，“积”是全局概念，或者说是一种“混合”，把两个函数在时间或者空间上进行混合。</p></li><li><p>那为什么要进行“卷”？直接相乘不好吗？我的理解，进行“卷”（翻转）的目的其实是施加一种约束，它指定了在“积”的时候以什么为参照。在<strong>信号分析</strong>的场景，它指定了在哪个特定时间点的前后进行“积”，在空间分析的场景，它指定了在哪个位置的周边进行累积处理。</p></li></ol><h2 id="考虑的应用场景"><a href="#考虑的应用场景" class="headerlink" title="考虑的应用场景"></a>考虑的应用场景</h2><p>为了更好地理解这些问题，我们先给出两个典型的应用场景：</p><ol><li><strong>信号分析</strong></li></ol><p>一个输入信号<em>f(t)</em>，经过一个线性系统（其特征可以用单位冲击响应函数<em>g(t)</em>描述）以后，输出信号应该是什么？<u>实际上通过卷积运算就可以得到输出信号。</u></p><ol start="2"><li><strong>图像处理</strong></li></ol><p>输入一幅图像<em>f(x,y)</em>，经过特定设计的卷积核<em>g(x,y)</em>进行卷积处理以后，输出图像将会得到模糊，边缘强化等各种效果。</p><h2 id="举例说明"><a href="#举例说明" class="headerlink" title="举例说明"></a>举例说明</h2><p>下面举几个例子说明为什么要翻转，以及叠加求和的意义。</p><h4 id="例1：信号分析"><a href="#例1：信号分析" class="headerlink" title="例1：信号分析"></a>例1：信号分析</h4><p>如下图所示，输入信号是 <em>f(t)</em> ，是随时间变化的。系统响应函数是 <em>g(t)</em> ，图中的响应函数是随时间指数下降的，它的物理意义是说：如果在 <em>t</em>=0 的时刻有一个输入，那么随着时间的流逝，这个输入将不断衰减。换言之，到了 <em>t</em>=T时刻，原来在 <em>t</em>=0 时刻的输入<em>f</em>(0)的值将衰减为<em>f</em>(0)<em>g</em>(T)。</p><p><img src="https://img-blog.csdnimg.cn/20190329202607222.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>考虑到信号是连续输入的，也就是说，每个时刻都有新的信号进来，所以，最终输出的是所有之前输入信号的累积效果。如下图所示，在T=10时刻，输出结果跟图中带标记的区域整体有关。其中，f(10)因为是刚输入的，所以其输出结果应该是f(10)g(0)，而时刻t=9的输入f(9)，只经过了1个时间单位的衰减，所以产生的输出应该是 f(9)g(1)，如此类推，即图中虚线所描述的关系。这些对应点相乘然后累加，就是T=10时刻的输出信号值，这个结果也是f和g两个函数在T=10时刻的卷积值。</p><p><img src="https://img-blog.csdnimg.cn/20190329202801773.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>显然，上面的对应关系看上去比较难看，是拧着的，所以，我们把g函数对折一下，变成了g(-t)，这样就好看一些了。看到了吗？这就是为什么卷积要“卷”，要翻转的原因，这是从它的物理意义中给出的。</p><p><img src="https://img-blog.csdnimg.cn/20190329202917661.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>上图虽然没有拧着，已经顺过来了，但看上去还有点错位，所以再进一步平移T个单位，就是下图。它就是本文开始给出的卷积定义的一种图形的表述：</p><p><img src="https://img-blog.csdnimg.cn/2019032920295542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>所以，在以上计算T时刻的卷积时，要维持的约束就是： ==<em>t+ (T-t) = T</em>== 。这种约束的意义，大家可以自己体会。</p><h4 id="例2：丢骰子"><a href="#例2：丢骰子" class="headerlink" title="例2：丢骰子"></a>例2：丢骰子</h4><p>在知乎问题 <a href="https://www.zhihu.com/question/22298352/answer/228543288" target="_blank" rel="noopener">如何通俗易懂地解释卷积</a>？中排名第一的 <a href="https://www.zhihu.com/people/matongxue" target="_blank" rel="noopener">马同学</a>在中举了一个很好的例子（下面的一些图摘自马同学的文章，在此表示感谢），用丢骰子说明了卷积的应用。</p><p>要解决的问题是：有两枚骰子，把它们都抛出去，两枚骰子点数加起来为4的概率是多少?</p><p><img src="https://images2017.cnblogs.com/blog/1235843/201711/1235843-20171119211259577-925832671.jpg" alt="img"></p><p>分析一下，两枚骰子点数加起来为4的情况有三种情况：1+3=4， 2+2=4, 3+1=4</p><p>因此，两枚骰子点数加起来为4的概率为：<img src="https://img-blog.csdnimg.cn/2019033010404399.png" alt="img"></p><p>写成卷积的方式就是：</p><p><img src="https://www.zhihu.com/equation?tex=%5Cdisplaystyle+%28f%2Ag%29%284%29%3D%5Csum+_%7Bm%3D1%7D%5E%7B3%7Df%284-m%29g%28m%29%5C%5C" alt="\displaystyle (f*g)(4)=\sum _{m=1}^{3}f(4-m)g(m)\\"></p><p>在这里我想进一步用上面的翻转滑动叠加的逻辑进行解释。</p><p>首先，因为两个骰子的点数和是4，为了满足这个约束条件，我们还是把函数 g 翻转一下，然后阴影区域上下对应的数相乘，然后累加，相当于求自变量为4的卷积值，如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20190330150427489.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>进一步，如此翻转以后，可以方便地进行推广去求两个骰子点数和为 <em>n</em> 时的概率，为<em>f</em> 和 <em>g</em>的卷积 <em>f\</em>g(n)*，如下图所示：</p><p><img src="https://img-blog.csdnimg.cn/20190330150928506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>由上图可以看到，函数 <em>g</em> 的滑动，带来的是点数和的增大。这个例子中对f和g的约束条件就是点数和，它也是卷积函数的自变量。有兴趣还可以算算，如果骰子的每个点数出现的概率是均等的，那么两个骰子的点数和n=7的时候，概率最大。</p><h4 id="例3：图像处理"><a href="#例3：图像处理" class="headerlink" title="例3：图像处理"></a>例3：图像处理</h4><p>还是引用知乎问题 <a href="https://www.zhihu.com/question/22298352/answer/228543288" target="_blank" rel="noopener">如何通俗易懂地解释卷积</a>？中 <a href="https://www.zhihu.com/people/matongxue" target="_blank" rel="noopener">马同学</a>的例子。图像可以表示为矩阵形式（下图摘自马同学的文章）：</p><p><img src="https://pic3.zhimg.com/v2-8dd14775ab8c91a09507f52e44f347f3_r.jpg" alt="preview"></p><p>对图像的处理函数（如平滑，或者边缘提取），也可以用一个g矩阵来表示，如：</p><p><img src="https://private.codecogs.com/gif.latex?g%3D%5Cbegin%7Bbmatrix%7D%20%26b_%7B-1%2C-1%7D%20%26b_%7B-1%2C0%7D%20%26b_%7B-1%2C1%7D%5C%5C%20%26b_%7B0%2C-1%7D%20%26b_%7B0%2C0%7D%20%26b_%7B0%2C1%7D%20%5C%5C%20%26b_%7B1%2C-1%7D%20%26b_%7B1%2C0%7D%20%26b_%7B1%2C1%7D%20%5Cend%7Bbmatrix%7D" alt="g=\begin{bmatrix} &amp;b_{-1,-1} &amp;b_{-1,0} &amp;b_{-1,1}\\ &amp;b_{0,-1} &amp;b_{0,0} &amp;b_{0,1} \\ &amp;b_{1,-1} &amp;b_{1,0} &amp;b_{1,1} \end{bmatrix}"></p><p>注意，我们在处理平面空间的问题，已经是二维函数了，相当于：</p><p><img src="https://private.codecogs.com/gif.latex?f%28x%2Cy%29%3Da_%7Bx%2Cy%7D" alt="f(x,y)=a_{x,y}">    <img src="https://private.codecogs.com/gif.latex?g%28x%2Cy%29%3Db_%7Bx%2Cy%7D" alt="g(x,y)=b_{x,y}">   </p><p>那么函数f和g的在（u，v）处的卷积 <img src="https://private.codecogs.com/gif.latex?f*g%28u%2Cv%29" alt="f*g(u,v)">该如何计算呢？</p><p><img src="https://img-blog.csdnimg.cn/20190330170548724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3BhbGV0,size_16,color_FFFFFF,t_70" alt="img"></p><p>首先我们在原始图像矩阵中取出（u,v）处的矩阵：【u代表纵向，v代表横向，矩阵坐标是表示相对位置，而==不是==坐标系中的象限坐标(上加下减，左减右加)-hh】</p><p><img src="https://private.codecogs.com/gif.latex?f%3D%5Cbegin%7Bbmatrix%7D%20%26a_%7Bu-1%2Cv-1%7D%20%26a_%7Bu-1%2Cv%7D%20%26a_%7Bu-1%2Cv&plus;1%7D%5C%5C%20%26a_%7Bu%2Cv-1%7D%20%26a_%7Bu%2Cv%7D%20%26a_%7Bu%2Cv&plus;1%7D%20%5C%5C%20%26a_%7Bu&plus;1%2Cv-1%7D%20%26a_%7Bu&plus;1%2Cv%7D%20%26a_%7Bu&plus;1%2Cv&plus;1%7D%20%5Cend%7Bbmatrix%7D" alt="f=\begin{bmatrix} &amp;a_{u-1,v-1} &amp;a_{u-1,v} &amp;a_{u-1,v+1}\\ &amp;a_{u,v-1} &amp;a_{u,v} &amp;a_{u,v+1} \\ &amp;a_{u+1,v-1} &amp;a_{u+1,v} &amp;a_{u+1,v+1} \end{bmatrix}"></p><p>然后将图像处理矩阵翻转（延x轴和y轴两个方向翻转），如下：</p><p><img src="https://private.codecogs.com/gif.latex?g%5E%7B%27%7D%3D%5Cbegin%7Bbmatrix%7D%20%26b_%7B1%2C1%7D%20%26b_%7B1%2C0%7D%20%26b_%7B1%2C-1%7D%5C%5C%20%26b_%7B0%2C1%7D%20%26b_%7B0%2C0%7D%20%26b_%7B0%2C-1%7D%20%5C%5C%20%26b_%7B-1%2C1%7D%20%26b_%7B-1%2C0%7D%20%26b_%7B-1%2C-1%7D%20%5Cend%7Bbmatrix%7D" alt="g^{&#39;}=\begin{bmatrix} &amp;b_{1,1} &amp;b_{1,0} &amp;b_{1,-1}\\ &amp;b_{0,1} &amp;b_{0,0} &amp;b_{0,-1} \\ &amp;b_{-1,1} &amp;b_{-1,0} &amp;b_{-1,-1} \end{bmatrix}"></p><p>计算卷积时，就可以用<img src="https://private.codecogs.com/gif.latex?f" alt="f">和<img src="https://private.codecogs.com/gif.latex?g%5E%7B%27%7D" alt="g^{&#39;}">的内积：</p><p><img src="https://private.codecogs.com/gif.latex?f*g%28u%2Cv%29%3Da_%7Bu-1%2Cv-1%7D%20%5Ctimes%20b_%7B1%2C1%7D%20&plus;%20a_%7Bu-1%2Cv%7D%20%5Ctimes%20b_%7B1%2C0%7D%20&plus;%20a_%7Bu-1%2Cv&plus;1%7D%20%5Ctimes%20b_%7B1%2C-1%7D%20&plus;%20a_%7Bu%2Cv-1%7D%20%5Ctimes%20b_%7B0%2C1%7D%20&plus;%20a_%7Bu%2Cv%7D%20%5Ctimes%20b_%7B0%2C0%7D%20&plus;%20a_%7Bu%2Cv&plus;1%7D%20%5Ctimes%20b_%7B0%2C-1%7D%20&plus;%20a_%7Bu&plus;1%2Cv-1%7D%20%5Ctimes%20b_%7B-1%2C1%7D%20&plus;%20a_%7Bu&plus;1%2Cv%7D%20%5Ctimes%20b_%7B-1%2C0%7D%20&plus;%20a_%7Bu&plus;1%2Cv&plus;1%7D%20%5Ctimes%20b_%7B-1%2C-1%7D" alt="f*g(u,v)=a_{u-1,v-1} \times b_{1,1} + a_{u-1,v} \times b_{1,0} + a_{u-1,v+1} \times b_{1,-1} + a_{u,v-1} \times b_{0,1} + a_{u,v} \times b_{0,0} + a_{u,v+1} \times b_{0,-1} + a_{u+1,v-1} \times b_{-1,1} + a_{u+1,v} \times b_{-1,0} + a_{u+1,v+1} \times b_{-1,-1}"></p><p>请注意，以上公式有一个特点，做乘法的两个对应变量a,b的下标之和都是（u,v），其目的是对这种加权求和进行一种约束。这也是为什么要将矩阵g进行翻转的原因。</p><p>以上计算的是（u,v）处的卷积，延x轴或者y轴滑动，就可以求出图像中各个位置的卷积，其输出结果是处理以后的图像（即经过平滑、边缘提取等各种处理的图像）。</p><p>再深入思考一下，在算图像卷积的时候，我们是直接在原始图像矩阵中取了（u,v）处的矩阵，为什么要取这个位置的矩阵，本质上其实是为了满足以上的约束。因为我们要算（u，v）处的卷积，而g矩阵是3x3的矩阵，要满足下标跟这个3x3矩阵的和是（u,v），只能是取原始图像中以（u，v）为中心的这个3x3矩阵，即图中的阴影区域的矩阵。</p><p>==【下面仅是摘录，并未理解-hh】==</p><p>推而广之，如果如果g矩阵不是3x3，而是6x6，那我们就要在原始图像中取以（u，v）为中心的6x6矩阵进行计算。由此可见，这种卷积就是把原始图像中的相邻像素都考虑进来，进行混合。相邻的区域范围取决于g矩阵的维度，维度越大，涉及的周边像素越多。而矩阵的设计，则决定了这种混合输出的图像跟原始图像比，究竟是模糊了，还是更锐利了。</p><p>比如说，如下图像处理矩阵将使得图像变得更为平滑，显得更模糊，因为它联合周边像素进行了平均处理：</p><p><img src="https://private.codecogs.com/gif.latex?g%3D%5Cbegin%7Bbmatrix%7D%20%26%5Cfrac%7B1%7D%7B9%7D%20%26%5Cfrac%7B1%7D%7B9%7D%20%26%5Cfrac%7B1%7D%7B9%7D%5C%5C%20%26%5Cfrac%7B1%7D%7B9%7D%20%26%5Cfrac%7B1%7D%7B9%7D%20%26%5Cfrac%7B1%7D%7B9%7D%20%5C%5C%20%26%5Cfrac%7B1%7D%7B9%7D%20%26%5Cfrac%7B1%7D%7B9%7D%20%26%5Cfrac%7B1%7D%7B9%7D%20%5Cend%7Bbmatrix%7D" alt="g=\begin{bmatrix} &amp;\frac{1}{9} &amp;\frac{1}{9} &amp;\frac{1}{9}\\ &amp;\frac{1}{9} &amp;\frac{1}{9} &amp;\frac{1}{9} \\ &amp;\frac{1}{9} &amp;\frac{1}{9} &amp;\frac{1}{9} \end{bmatrix}"> </p><p>而如下图像处理矩阵将使得像素值变化明显的地方更为明显，强化边缘，而变化平缓的地方没有影响，达到提取边缘的目的：</p><p><img src="https://private.codecogs.com/gif.latex?g%3D%5Cbegin%7Bbmatrix%7D%20%26-1%20%26-1%20%26-1%5C%5C%20%26-1%20%269%20%26-1%20%5C%5C%20%26-1%20%26-1%20%26-1%20%5Cend%7Bbmatrix%7D" alt="g=\begin{bmatrix} &amp;-1 &amp;-1 &amp;-1\\ &amp;-1 &amp;9 &amp;-1 \\ &amp;-1 &amp;-1 &amp;-1 \end{bmatrix}"></p><h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><p><a href="https://www.cnblogs.com/delphi-xe5/p/11373199.html" target="_blank" rel="noopener">对卷积的定义和意义的通俗解释-物理角度从一维升级为二维</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;对卷积的定义和意义的通俗解释&quot;&gt;&lt;a href=&quot;#对卷积的定义和意义的通俗解释&quot; class=&quot;headerlink&quot; title=&quot;对卷积的定义和意义的通俗解释&quot;&gt;&lt;/a&gt;对卷积的定义和意义的通俗解释&lt;/h1&gt;&lt;p&gt;教科书上一般定义函数&lt;img src=&quot;ht
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/11/11/English/paper%E6%A0%BC%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/11/11/English/paper格式/</id>
    <published>2019-11-11T02:27:16.226Z</published>
    <updated>2019-11-11T03:29:46.935Z</updated>
    
    <content type="html"><![CDATA[<ol><li>空行</li></ol><p>​      \ \hspace*{\fill} \</p><ol start="2"><li>罗列点</li></ol><p>\begin{enumerate}[labelsep = .5em, leftmargin = 0pt, itemindent = 3em]</p><p>\item[·]RQ1: How does XXXX perform as compared with state-of-the-art methods? </p><p>\item[·]RQ1: How do different hyper-parameter settings (e.g., depth of layer, embedding propagation layer, layer-aggregation mechanism,different connecting of network) affect XXXX?</p><p>\item[·]How much impact does the splitting of the data have on the experiment?</p><p>\end{enumerate}</p><ol start="3"><li><p>插入表格2种方式</p><ul><li><p>顶端插入</p><p>\begin{table}</p><p>\centering</p><p>\caption{Statistics of the datasets.}</p><p>\begin{tabular}{cccccc}</p><p>\toprule</p><p>Dataset &amp;  items &amp; clicks &amp;  train &amp;  test &amp; avglen \</p><p>\toprule</p><p>Steve Jobs&amp; 001&amp; Male&amp; Male&amp; Male&amp; Male\</p><p>\midrule  %添加表格中横线</p><p>Bill Gates&amp; 002&amp; Female&amp; Male&amp; Male&amp; Male\</p><p>\midrule  %添加表格中横线</p><p>Bill Gates&amp; 002&amp; Female&amp; Male&amp; Male&amp; Male\</p><p>\bottomrule</p><p>\end{tabular}</p><p>\label{tbl:table-example}</p><p>\end{table}</p></li><li><p>中间插入</p><p>\begin{tabular}{cccccc} % c控制列数</p><p>\toprule  %添加表格头部粗线</p><p>Dataset &amp;  items &amp; clicks &amp;  train &amp;  test &amp; avglen \</p><p>\midrule  %添加表格中横线</p><p>Steve Jobs&amp; 001&amp; Male&amp; Male&amp; Male&amp; Male\</p><p>\midrule  %添加表格中横线</p><p>Bill Gates&amp; 002&amp; Female&amp; Male&amp; Male&amp; Male\</p><p>\midrule  %添加表格中横线</p><p>Bill Gates&amp; 002&amp; Female&amp; Male&amp; Male&amp; Male\</p><p>\bottomrule %添加表格底部粗线</p><p>\end{tabular}</p></li></ul></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;空行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;​      \ \hspace*{\fill} \&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;罗列点&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;\begin{enumerate}[labelsep = .5em, leftmargin 
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/11/02/English/EglishPaper/"/>
    <id>http://yoursite.com/2019/11/02/English/EglishPaper/</id>
    <published>2019-11-02T09:08:36.884Z</published>
    <updated>2019-11-02T09:11:25.935Z</updated>
    
    <content type="html"><![CDATA[<ul><li>英文字母缩写</li></ul><ol><li><strong>e.g. 的全称是 exampli gratia，意为“例如”。</strong></li></ol><p>可以代替”for example; for instance;such as”等。如: Buy some vegetables, e.g., carrots.</p><p>注：<strong>1、e 和 g 后面都有“.” 经常出现的错误是，忘记 e 后面的“.”</strong></p><p><strong>2、最好把 e.g. 连同它的例子放在括号中</strong>，如 I like quiet activities (e.g., reading)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;英文字母缩写&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;e.g. 的全称是 exampli gratia，意为“例如”。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可以代替”for example; for instance;such as”等
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>np.where</title>
    <link href="http://yoursite.com/2019/10/14/pythonLearning/np.where()/"/>
    <id>http://yoursite.com/2019/10/14/pythonLearning/np.where()/</id>
    <published>2019-10-14T07:48:25.000Z</published>
    <updated>2019-10-14T11:34:33.292Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、np-where-用法"><a href="#一、np-where-用法" class="headerlink" title="一、np.where()用法"></a>一、np.where()用法</h2><ol><li>np.where(condition,x,y) 当where内有<strong>三个参数</strong>时，第一个参数表示条件，当条件成立时where方法返回x，当条件不成立时where返回y</li><li>np.where(condition) 当where内只有<strong>一个参数</strong>时，那个参数表示条件，当条件成立时，where返回的是每个符合condition条件<strong>元素的坐标</strong>,返回的是以<strong>元组的形式</strong></li></ol><h2 id="代码示例"><a href="#代码示例" class="headerlink" title="代码示例"></a>代码示例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 用法2示例</span><br><span class="line">&gt;&gt;&gt; import numpy as np</span><br><span class="line">&gt;&gt;&gt; a = np.array([2,4,6,8,10]) # 初始化一个数组a</span><br><span class="line">&gt;&gt;&gt; np.where(a&gt;5) # 筛选出a数组中大于5的元素</span><br><span class="line">(array([2, 3, 4]),) # 得到的是 元组形式 的元素对应的 下标 位置</span><br><span class="line">&gt;&gt;&gt; np.where(a&gt;5)[0] </span><br><span class="line">array([2, 3, 4])</span><br><span class="line">&gt;&gt;&gt; np.where(a&gt;5)[0][0] # 取第0个下标</span><br><span class="line">2</span><br><span class="line">&gt;&gt;&gt; np.where(a&gt;5)[0][1] # 取第1个下标</span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/island1995/article/details/90200151" target="_blank" rel="noopener"><strong>np.where()的用法</strong></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一、np-where-用法&quot;&gt;&lt;a href=&quot;#一、np-where-用法&quot; class=&quot;headerlink&quot; title=&quot;一、np.where()用法&quot;&gt;&lt;/a&gt;一、np.where()用法&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;np.where(condition
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>List---python for循环生成列表</title>
    <link href="http://yoursite.com/2019/10/14/pythonLearning/Python%20for%E5%BE%AA%E7%8E%AF%E7%94%9F%E6%88%90%E5%88%97%E8%A1%A8/"/>
    <id>http://yoursite.com/2019/10/14/pythonLearning/Python for循环生成列表/</id>
    <published>2019-10-14T07:48:25.000Z</published>
    <updated>2019-10-14T11:15:29.716Z</updated>
    
    <content type="html"><![CDATA[<h2 id="吓人的语句"><a href="#吓人的语句" class="headerlink" title="吓人的语句"></a>吓人的语句</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">featList = [example[i] for example in dataSet]</span><br><span class="line">classList = [example[-1] for example in dataSet]</span><br></pre></td></tr></table></figure><p>一般Python for语句前不加语句，但我在机器学习实战中看到了上面这种语句</p><h2 id="解释"><a href="#解释" class="headerlink" title="解释"></a>解释</h2><p>语句<code>featList = [example[i] for example in dataSet]</code>作用为：</p><p>将 <strong>dataSet</strong> 中的数据<strong>按行</strong>依次放入example中，然后取得example中的<strong>example[ i ]</strong>元素，放入列表<strong>featList</strong>中</p><p>语句<code>classList = [example[-1] for example in dataSet]</code>作用为：</p><p>将<strong>dataSet</strong>中的数据<strong>按行</strong>依次放入example中，然后取得example中的<strong>example[-1]</strong>元素，放入列表<strong>classList</strong>中</p><p>总而言之，类似上述两种for循环形式可以很方便地用来<strong>创建列表</strong>，</p><h2 id="举例"><a href="#举例" class="headerlink" title="举例"></a>举例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">list_0 = [x*x for x in range(5)]  # range(5)= 0，1，2，3，4</span><br><span class="line">print(list_0)</span><br><span class="line"></span><br><span class="line">#输出：</span><br><span class="line">#[0, 1, 4, 9, 16]</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/baishuiniyaonulia/article/details/79301092" target="_blank" rel="noopener"><strong>python for 循环列表</strong></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;吓人的语句&quot;&gt;&lt;a href=&quot;#吓人的语句&quot; class=&quot;headerlink&quot; title=&quot;吓人的语句&quot;&gt;&lt;/a&gt;吓人的语句&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/categories/python/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>Xcode 的安装使用</title>
    <link href="http://yoursite.com/2019/10/06/software-install/Xcode/"/>
    <id>http://yoursite.com/2019/10/06/software-install/Xcode/</id>
    <published>2019-10-06T01:55:27.000Z</published>
    <updated>2019-10-06T02:59:24.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为了做一名合格的助教，决定自己写代码验证（其实也是为了完成老师要求每周出2道题目的需求），可是mac电脑上没有C++环境，于是乎各种知乎，寻找mac上比较好的编译工具，Xcode呼声很高，于是乎各种倒腾起来</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><ol><li><strong>下载code</strong>2种途径<ul><li>App Store  商店直接下载</li><li>官网下载</li></ul></li><li>按照步骤安装即可</li><li>使用方法及遇到的问题见<strong>参考链接</strong></li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://blog.csdn.net/weixin_42071896/article/details/80341774" target="_blank" rel="noopener">创建c++项目</a></p><p><a href="https://blog.csdn.net/u014084081/article/details/38080731" target="_blank" rel="noopener">写程序示例</a></p><p><a href="http://ios.idup.club/xcode/Xcode概述-6(运行，调试和测试)" target="_blank" rel="noopener">调试功能</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;为了做一名合格的助教，决定自己写代码验证（其实也是为了完成老师要求每周出2道题目的需求），可是mac电脑上没有C++环境，于是乎各种知乎，寻
      
    
    </summary>
    
    
      <category term="技术篇" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Mac 上安装及使用 VScode 和 TeX</title>
    <link href="http://yoursite.com/2019/10/06/software-install/Mac%20%E4%B8%8A%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%20VScode%20%E5%92%8C%20TeX/"/>
    <id>http://yoursite.com/2019/10/06/software-install/Mac 上安装及使用 VScode 和 TeX/</id>
    <published>2019-10-06T01:55:27.000Z</published>
    <updated>2019-10-06T03:01:29.201Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>据说学术论文在latex上写后期改起来非常方便，于是乎开一波在mac上安装latex编辑器浪潮。本着勤俭节约（不付费）的精神，在希望与绝望中各种跳坑！</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ol><li><a href="https://blog.csdn.net/zhuxiaoyang2000/article/details/79449276" target="_blank" rel="noopener">Mac 上使用 TeX</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;据说学术论文在latex上写后期改起来非常方便，于是乎开一波在mac上安装latex编辑器浪潮。本着勤俭节约（不付费）的精神，在希望与绝望中
      
    
    </summary>
    
    
      <category term="技术篇" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/09/21/English/English/"/>
    <id>http://yoursite.com/2019/09/21/English/English/</id>
    <published>2019-09-21T12:33:44.192Z</published>
    <updated>2019-09-21T13:40:49.234Z</updated>
    
    <content type="html"><![CDATA[<h2 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h2><table><thead><tr><th align="center">主格</th><th align="center">宾格</th><th align="center">形容词性物主代词</th><th>名词性物主代词</th><th>反生代词</th></tr></thead><tbody><tr><td align="center">I</td><td align="center">me</td><td align="center">my</td><td>mine</td><td>myself</td></tr><tr><td align="center">you</td><td align="center"><strong>you</strong></td><td align="center">your</td><td>yours</td><td>yourself</td></tr><tr><td align="center">he</td><td align="center">him</td><td align="center">his</td><td>his</td><td>himself</td></tr><tr><td align="center">she</td><td align="center">her</td><td align="center">her</td><td>hers</td><td>herself</td></tr><tr><td align="center">It</td><td align="center">it</td><td align="center">its</td><td>its</td><td>itself</td></tr><tr><td align="center">We</td><td align="center">us</td><td align="center">our</td><td>ours</td><td>ourselves</td></tr><tr><td align="center">you</td><td align="center"><strong>you</strong></td><td align="center">your</td><td>yours</td><td>yourselves</td></tr><tr><td align="center">they</td><td align="center">them</td><td align="center">their</td><td>theirs</td><td>themselves</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;汇总&quot;&gt;&lt;a href=&quot;#汇总&quot; class=&quot;headerlink&quot; title=&quot;汇总&quot;&gt;&lt;/a&gt;汇总&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;主格&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;宾格&lt;/th
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Ubantu下修改文件权限命令</title>
    <link href="http://yoursite.com/2019/09/21/software-install/ubantu%20xiugaiquanxian/"/>
    <id>http://yoursite.com/2019/09/21/software-install/ubantu xiugaiquanxian/</id>
    <published>2019-09-21T03:57:15.000Z</published>
    <updated>2019-09-21T04:30:07.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题背景"><a href="#问题背景" class="headerlink" title="问题背景"></a>问题背景</h2><p>安装某软件时报错，搜索解决方案说要把<strong>XX文件</strong>夹删除，带着忐忑，先备份到另一个文件夹，然后命令删除<strong>XX文件夹</strong>，然后此方案并没有解决之前问题，于是乎各种搜索还原已被删除的<strong>XX文件夹</strong></p><h2 id="整体思路"><a href="#整体思路" class="headerlink" title="整体思路"></a>整体思路</h2><p>方案一：用命令直接将备份的 <strong>XX文件夹</strong> 移动到原有位置，由于权限问题以失败告终</p><p>方案二：很笨，最后成功了</p><ol><li><p>原有目录下创建 <strong>XX文件夹</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir XX文件夹名称</span><br></pre></td></tr></table></figure></li><li><p>切换到 <strong>XX文件夹</strong>下，依次创建原有的  <strong>xxx文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /XX文件夹名称</span><br><span class="line">sudo touch xxx文件</span><br></pre></td></tr></table></figure></li><li><p>依次将 备份的XX文件夹中的 <strong>xxx文件</strong>中的内容复制粘贴，此过程遇到问题如下：</p><ul><li><p>发现所创建的文件为 <strong>只读</strong>，无法 <strong>粘贴</strong></p><p>修改文件权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 666 ×××文件</span><br></pre></td></tr></table></figure><p>  此时 xxx文件具有写的权限，依次重复所有文件即可。</p></li><li><p>为了防止其他问题出现，我将所有我修改过权限的文件，在写入内容后，又恢复了只读</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 644 ×××文件</span><br></pre></td></tr></table></figure><p>依次修改所有写好内容的文件即可</p></li></ul></li></ol><h2 id="修改文件权限常用方法如下："><a href="#修改文件权限常用方法如下：" class="headerlink" title="修改文件权限常用方法如下："></a>修改文件权限常用方法如下：</h2><p>sudo chmod 600 ××× （只有所有者有读和写的权限）<br><strong>sudo chmod 644 ××× （所有者有读和写的权限，组用户只有读的权限）</strong><br>sudo chmod 700 ××× （只有所有者有读和写以及执行的权限）<br><strong>sudo chmod 666 ××× （每个人都有读和写的权限）</strong><br>sudo chmod 777 ××× （每个人都有读和写以及执行的权限）</p><p>其中×××指文件名（也可以是文件夹名，不过要在chmod后加-ld）。</p><p>解释一下，其实整个命令的形式是<br>sudo chmod -（代表类型）×××（所有者）×××（组用户）×××（其他用户）</p><p>三位数的每一位都表示一个用户类型的权限设置。取值是0～7，即二进制的[000]~[111]。</p><p>这个三位的二进制数的每一位分别表示读、写、执行权限。</p><p>如000表示三项权限均无，而100表示只读。这样，我们就有了下面的对应：<br>0 [000] 无任何权限<br>4 [100] 只读权限<br>6 [110] 读写权限<br>7 [111] 读写执行权限</p><p>现在看上面的几个常用用法就非常清楚了。试着自己来修改权限吧</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.cnblogs.com/viviwind/archive/2012/08/02/2619451.html" target="_blank" rel="noopener">ubuntu下修改文件夹权限</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;问题背景&quot;&gt;&lt;a href=&quot;#问题背景&quot; class=&quot;headerlink&quot; title=&quot;问题背景&quot;&gt;&lt;/a&gt;问题背景&lt;/h2&gt;&lt;p&gt;安装某软件时报错，搜索解决方案说要把&lt;strong&gt;XX文件&lt;/strong&gt;夹删除，带着忐忑，先备份到另一个文件夹，然后命
      
    
    </summary>
    
    
      <category term="software" scheme="http://yoursite.com/categories/software/"/>
    
    
      <category term="Version" scheme="http://yoursite.com/tags/Version/"/>
    
  </entry>
  
  <entry>
    <title>Ubantu下常用的文件操作命令</title>
    <link href="http://yoursite.com/2019/09/21/software-install/ubantu-based/"/>
    <id>http://yoursite.com/2019/09/21/software-install/ubantu-based/</id>
    <published>2019-09-21T03:57:15.000Z</published>
    <updated>2019-09-21T04:27:36.841Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubantu下的常用命令"><a href="#ubantu下的常用命令" class="headerlink" title="ubantu下的常用命令"></a>ubantu下的常用命令</h2><h3 id="相关命令"><a href="#相关命令" class="headerlink" title="相关命令"></a>相关命令</h3><p>　　cd 路径                   （进入一个路径，比如cd  /usr/local/lib）</p><p>　　cd ..　　  　　　　  （返回上一个文件夹）</p><p>　　ls　　　　　　　　 （显示当前文件夹下的所有文件，Linux独有哦，dir 也有相同功能）</p><p>　　sudo 命令　　　　 （获取超级管理权限，需要输入密码）</p><h3 id="常用新建、删除、拷贝命令"><a href="#常用新建、删除、拷贝命令" class="headerlink" title="常用新建、删除、拷贝命令"></a>常用新建、删除、拷贝命令</h3><p>　　mkdir 目录名        （新建一个文件夹，文件夹在Linux系统中叫做“目录”）</p><p>　　touch 文件名        （新建一个空文件）</p><p>　　rmdir 目录名        （删除一个空文件夹，文件夹里有内容则不可用）</p><p>　　rm -rf 非空目录名 （删除一个包含文件的文件夹）</p><p>　　rm 文件名 文件名 （删除多个文件）</p><p>　　cp 文件名 目标路径（拷贝一个文件到目标路径，如cp hserver /opt/hqueue）</p><p>　　cp -i　　　　　　  （拷贝，同名文件存在时，输出 [yes/no] 询问是否执行）</p><p>　　cp -f　　　　　　  （强制复制文件，如有同名不询问）</p><p>例如：将/home/wally/test中 test.c 的文件复制到/local/arm 中，命令为：</p><p>cd /wally/test</p><p> ls </p><p>sudo cp -i test.c /local/arm</p><h3 id="常用解压、安装程序、文件更新命令：deb格式双击即可安装"><a href="#常用解压、安装程序、文件更新命令：deb格式双击即可安装" class="headerlink" title="常用解压、安装程序、文件更新命令：deb格式双击即可安装"></a>常用解压、安装程序、文件更新命令：deb格式双击即可安装</h3><p>　　tar -zxvf *.tar.gz　     ( 解压 tar.gz格式的文件 )</p><p>　　source *.install　　　 （安装install格式的安装包）</p><p>　　sh 路径/×.sh　　    　 （安装sh格式的文件，如 sudo sh /home/hp/Downloads/*.sh）</p><p>　　sudo apt-get upgrade（更新已安装的包）</p><p>　　sudo apt-get update  （更新源）</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://www.cnblogs.com/jackchiang/p/4065723.html" target="_blank" rel="noopener">Ubuntu系统下常用的新建、删除、拷贝文件命令</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ubantu下的常用命令&quot;&gt;&lt;a href=&quot;#ubantu下的常用命令&quot; class=&quot;headerlink&quot; title=&quot;ubantu下的常用命令&quot;&gt;&lt;/a&gt;ubantu下的常用命令&lt;/h2&gt;&lt;h3 id=&quot;相关命令&quot;&gt;&lt;a href=&quot;#相关命令&quot; cla
      
    
    </summary>
    
    
      <category term="software" scheme="http://yoursite.com/categories/software/"/>
    
    
      <category term="Version" scheme="http://yoursite.com/tags/Version/"/>
    
  </entry>
  
  <entry>
    <title>重零开始安装Ubantu18.04+nvidia-410显卡驱+cuda10.0</title>
    <link href="http://yoursite.com/2019/09/20/software-install/ubantuSystem/"/>
    <id>http://yoursite.com/2019/09/20/software-install/ubantuSystem/</id>
    <published>2019-09-20T12:55:27.000Z</published>
    <updated>2019-09-20T08:58:57.396Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>为了paper实验，各种周折后，2019.09入手一台新电脑，显卡配置为<strong>华硕RTX2080Ti</strong>，于是乎小白开始为电脑安装ubantu18.0及系统内nvidia-410显卡驱、CUDA10.0、cuDNN v7.3.1、ananconda3、ananconda2、tensorflow之旅奔波</p><h2 id="友情提醒"><a href="#友情提醒" class="headerlink" title="友情提醒"></a>友情提醒</h2><p>安装过程中所下载好的软件包，备份到<strong>移动硬盘</strong>，防止系统重装，避免浪费不必要的软件下载时间</p><h2 id="相关工作"><a href="#相关工作" class="headerlink" title="相关工作"></a>相关工作</h2><p>在终端查看CUDNN版本：（附件1）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure><p>安装输入法报错，解决方案参考4</p><p>输入法靠谱详细教程讲解</p><p><a href="https://blog.csdn.net/fx_yzjy101/article/details/80243710" target="_blank" rel="noopener">解决Ubuntu 18.04中文输入法的问题，安装搜狗拼音</a></p><p>不用外网就能安装的google chrome教程</p><p><a href="https://blog.csdn.net/u012318074/article/details/74059005" target="_blank" rel="noopener">Ubuntu 安装 Google Chrome 浏览器</a></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol><li><a href="https://blog.csdn.net/weixin_40859436/article/details/83152249" target="_blank" rel="noopener">Ubuntu18.04+RTX2080+cuda10+tensorflow</a></li><li><a href="https://blog.csdn.net/weixin_43820996/article/details/100677482" target="_blank" rel="noopener">Ubuntu18.04安装Cuda10.1/Cudnn</a></li><li><a href="https://blog.csdn.net/qq_15192373/article/details/81091278" target="_blank" rel="noopener">Ubuntu 18.04 安装 PyCharm</a></li><li><a href="https://www.cnblogs.com/aidenzdly/p/10563340.html" target="_blank" rel="noopener">E:Sub-process /usr/bin/dpkg returned an error code (1)错误解决</a></li></ol><h2 id="Ubantu-无法识别-（希捷）移动硬盘"><a href="#Ubantu-无法识别-（希捷）移动硬盘" class="headerlink" title="Ubantu 无法识别 （希捷）移动硬盘"></a>Ubantu 无法识别 （希捷）移动硬盘</h2><p>本人的为ubuntu18.04 (64位)，ubuntu14、ubuntu14解决办法应该一样，其他的未测试。</p><p>解决方式如下，运行命令:</p><p>sudo apt-get install exfat-fuse exfat-utils</p><h2 id="参考-1"><a href="#参考-1" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/qq_18863573/article/details/54341460" target="_blank" rel="noopener"><strong>Ubuntu无法挂载移动硬盘</strong></a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;为了paper实验，各种周折后，2019.09入手一台新电脑，显卡配置为&lt;strong&gt;华硕RTX2080Ti&lt;/strong&gt;，于是乎小白
      
    
    </summary>
    
    
      <category term="装机篇" scheme="http://yoursite.com/categories/%E8%A3%85%E6%9C%BA%E7%AF%87/"/>
    
    
      <category term="software installs" scheme="http://yoursite.com/tags/software-installs/"/>
    
  </entry>
  
  <entry>
    <title>uUbantu18.04安装nvidia-410显卡驱（华硕2080Ti）</title>
    <link href="http://yoursite.com/2019/09/19/software-install/ubantu18.04%20install%20drive/"/>
    <id>http://yoursite.com/2019/09/19/software-install/ubantu18.04 install drive/</id>
    <published>2019-09-19T13:55:27.000Z</published>
    <updated>2019-09-20T01:02:34.973Z</updated>
    
    <content type="html"><![CDATA[<h2 id="本驱动安装流程简介"><a href="#本驱动安装流程简介" class="headerlink" title="本驱动安装流程简介"></a>本驱动安装流程简介</h2><p><strong>卸载ubantu自带驱动——添加PPA源——安装对应版本的驱动</strong></p><h2 id="具体步骤："><a href="#具体步骤：" class="headerlink" title="具体步骤："></a>具体步骤：</h2><ol><li><p>为了保证不必要的冲突，先卸载原有驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove --purge nvidia*   #卸载原有驱动</span><br></pre></td></tr></table></figure></li><li><p>禁用nouveau驱动，<strong>非必要步骤，可跳过</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit /etc/modprobe.d/blacklist.conf  #打开文本</span><br></pre></td></tr></table></figure><p>在打开的文本最后添加以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure><p>保存退出后执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br></pre></td></tr></table></figure><p>（重启后，执行：<code>lsmod | grep nouveau</code>。如果没有屏幕输出，说明禁用nouveau成功。）</p></li><li><p>添加PPA源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:graphics-drivers/ppa</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>安装驱动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nvidia-driver-410</span><br></pre></td></tr></table></figure><p>注：软件包的名字需要写正确，比如如果写成下面的会报则会报错  <strong>E：无法定位软件包 nvidia-410</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install nvidia-410</span><br></pre></td></tr></table></figure></li><li><p>安装成功，<strong>重启电脑</strong>，输入下面命令确认是否安装成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p>若显示下图则表示安装成功：</p><p><img src="file:///Users/huanw/Library/Application%20Support/typora-user-images/image-20190920081001226.png?lastModify=1568938193" alt="image-20190920081001226"></p></li></ol><ol start="6"><li><p>各参数含义</p><p>表格第一行：分别表示 nvidia显卡对应的版本：410.104，CUDA版本：10.0</p><p>注意：<strong>电脑后期装cuda需同显卡版本对应，即cuda版本为10.0</strong>,<a href>安装cuda10请跳转本链接</a></p><p>表格第二行依次为风扇等</p><p>表格下面的processes表示现在电脑的进程使用情况</p></li></ol><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="https://blog.csdn.net/u012796629/article/details/86583560" target="_blank" rel="noopener">ubuntu18.04 安装nvidia显卡驱动</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;本驱动安装流程简介&quot;&gt;&lt;a href=&quot;#本驱动安装流程简介&quot; class=&quot;headerlink&quot; title=&quot;本驱动安装流程简介&quot;&gt;&lt;/a&gt;本驱动安装流程简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;卸载ubantu自带驱动——添加PPA源——安装对应版本的驱动&lt;/s
      
    
    </summary>
    
    
      <category term="装机篇" scheme="http://yoursite.com/categories/%E8%A3%85%E6%9C%BA%E7%AF%87/"/>
    
    
      <category term="software installs" scheme="http://yoursite.com/tags/software-installs/"/>
    
  </entry>
  
  <entry>
    <title>Hexo+github 从windows到mac的迁移（小白水平）</title>
    <link href="http://yoursite.com/2019/09/14/software-install/Hexo+github%20%E4%BB%8Ewindows%E5%88%B0mac%E7%9A%84%E8%BF%81%E7%A7%BB%EF%BC%88%E8%B6%85%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4%E5%8F%8A%E9%81%87%E5%88%B0%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%EF%BC%89/"/>
    <id>http://yoursite.com/2019/09/14/software-install/Hexo+github 从windows到mac的迁移（超详细步骤及遇到问题解决）/</id>
    <published>2019-09-14T13:55:27.000Z</published>
    <updated>2020-06-06T04:02:02.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>2019的年5月在惠普笔记本搭建了个hexo+github版人博客就；<br>2019的6月刚入手了一个mac，于是乎各种东西都得由windows转移到mac;<br>hexo的搬家路：windows - &gt; MacBook Pro </p><h2 id="总体思路"><a href="#总体思路" class="headerlink" title="总体思路"></a>总体思路</h2><p>自己也算是摸爬滚打搭建迁移成功，把完整步骤分享给大家，同时最后有一些参考链接，如果我的步骤有问题，大家可以参考其他人的.</p><p>理清思路真不难，<strong>过程要细心、耐心</strong>，大概分为以下三个模块：</p><ul><li>首先在mac电脑上安装好<code>hexo</code>，并初始化根目录;</li><li>然后生成新的<code>SSH key</code>，并将其添加到<code>github</code>上;</li><li>将旧电脑中的三个文件，直接粘贴覆盖在新电脑对应的目录。</li></ul><h2 id="言归正传"><a href="#言归正传" class="headerlink" title="言归正传"></a>言归正传</h2><h2 id="一-安装hexo前奏"><a href="#一-安装hexo前奏" class="headerlink" title="一. 安装hexo前奏"></a>一. 安装hexo前奏</h2><h3 id="1-安装Homebrew（下载速度有点慢，耐心-）"><a href="#1-安装Homebrew（下载速度有点慢，耐心-）" class="headerlink" title="1. 安装Homebrew（下载速度有点慢，耐心~~）"></a>1. 安装Homebrew（下载速度有点慢，耐心~~）</h3><p>Homebrew安装过程很简单，直接打开mac电脑的<strong>Terminal</strong>命令窗口，把下面的代码粘贴一下，按回车键执行即可，安装过程中两次停顿，分别需要输入 y 和 电脑密码</p><table><tr><td bgcolor="black"> <font size="3" color="white">/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" </font></td></tr></table>  <p>查看安装是否成功命令：</p><table><tr><td bgcolor="black"> <font size="3" color="white"> brew --version </font></td></tr></table>  安装成功提示版本号，如下图<p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/Homebrewsuccessful.jpg?raw=true" alt="Homebrew安装成功！"></p><h3 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2. 安装git"></a>2. 安装git</h3><p>先检查下电脑是否已存在Git，若mac自带git，此步可以跳过，查看命令如下</p><table><tr><td bgcolor="black"> <font size="3" color="white"> git --version </font></td></tr></table>  若不存在，使用brew安装Git，安装命令如下<table><tr><td bgcolor="black"> <font size="3" color="white"> brew install git </font></td></tr></table>  同样，输入**git --version** 验证是否安装成功<p>安装成功提示版本号，如下图</p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/gitSuccessful.jpg?raw=true" alt="git安装成功！"></p><h3 id="3-安装node"><a href="#3-安装node" class="headerlink" title="3. 安装node"></a>3. 安装node</h3><p>输入命令如下</p><table><tr><td bgcolor="black"> <font size="3" color="white"> brew install node </font></td></tr></table> 检查安装是否成功，一定要安装成功，否者否许操作中会报错<table><tr><td bgcolor="black"> <font size="3" color="white"> node --version </font></td></tr></table> 安装成功提示版本号，如下图<p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/nodeSuccessful.jpg?raw=true" alt="node安装成功！"></p><h2 id="二-Hexo的安装及初始化"><a href="#二-Hexo的安装及初始化" class="headerlink" title="二. Hexo的安装及初始化"></a>二. Hexo的安装及初始化</h2><h3 id="1-用-node-的-npm-安装-hexo，命令如下（下载速度有点慢，耐心-）"><a href="#1-用-node-的-npm-安装-hexo，命令如下（下载速度有点慢，耐心-）" class="headerlink" title="1. 用 node 的 npm 安装 hexo，命令如下（下载速度有点慢，耐心~~）"></a>1. 用 node 的 npm 安装 hexo，命令如下（下载速度有点慢，耐心~~）</h3><table><tr><td bgcolor="black"> <font size="3" color="white"> sudo npm install --unsafe-perm=true -g hexo-cli </font></td></tr></table> ### 2. 初始化hexo<p>创建HexoBlog（名字根据个人喜好自取）文件夹,输入下面命令：    </p><table><tr><td bgcolor="black"> <font size="3" color="white"> hexo init HexoBlog  </font></td></tr></table>  <p><strong>！！！报错提示及解决方案</strong></p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/hexo%20erro.jpg?raw=true" alt="创建HexoBlog报错"></p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/hexo%20ok.jpg?raw=true" alt="npm权限问题解决方案"></p><h3 id="3-体验hexo魅力"><a href="#3-体验hexo魅力" class="headerlink" title="3. 体验hexo魅力"></a>3. 体验hexo魅力</h3><p>​       由于初始化hexo 之后source目录下自带一篇hello world文章, 所以依次执行下方两个命令：<br><font color="#DC143C" size="3">&ensp;注意：执行下面命令前要先进入blog文件夹中重新打开git命令窗口！！！</font>  </p><table><tr><td bgcolor="black"> <font size="3" color="white">$ hexo generate </font></td></tr></table>   命令含义： 生成静态文件，等价于(可简写为)： `hexo  g`    <table><tr><td bgcolor="black"> <font size="3" color="white">$ hexo server  </font></td></tr></table>   命令含义： 启动本地服务器，等价于(可简写为)： `hexo  s`<p>打开浏览器，输入网址： <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，即可看到网站初步的模样。<br><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190410-boke/github-2.png?raw=true" alt="bendibokeliulan"></p><h2 id="三-mac生成SSH及配置"><a href="#三-mac生成SSH及配置" class="headerlink" title="三. mac生成SSH及配置"></a>三. mac生成SSH及配置</h2><h3 id="1-先检查一下本机的-SSH-key是否已存在"><a href="#1-先检查一下本机的-SSH-key是否已存在" class="headerlink" title="1. 先检查一下本机的 SSH key是否已存在"></a>1. 先检查一下本机的 SSH key是否已存在</h3><table><tr><td bgcolor="black"> <font size="3" color="white">ls -a ~/.ssh  </font></td></tr></table>如果输出以下内容（xxx和xxx.pub成对存在）说明ssh key存在(输入这个命令也行：ls ~/.ssh)<h3 id="2-若不存在，输入以下命令，生成ssh-Key"><a href="#2-若不存在，输入以下命令，生成ssh-Key" class="headerlink" title="2. 若不存在，输入以下命令，生成ssh Key"></a>2. 若不存在，输入以下命令，生成ssh Key</h3><table><tr><td bgcolor="black"> <font size="3" color="white">ssh -T git@github.com   //git@github.com为邮箱地址？ </font></td></tr></table><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/ssh%20open%202.jpg?raw=true" alt="生成ssh"></p><h3 id="3-你可能找不命令窗口提示所生成的ssh在哪里，此时可直接用命令打开-ssh文件"><a href="#3-你可能找不命令窗口提示所生成的ssh在哪里，此时可直接用命令打开-ssh文件" class="headerlink" title="3. 你可能找不命令窗口提示所生成的ssh在哪里，此时可直接用命令打开.ssh文件"></a>3. 你可能找不命令窗口提示所生成的ssh在哪里，此时可直接用命令打开.ssh文件</h3><table><tr><td bgcolor="black"> <font size="3" color="white">open ~/.ssh </font></td></tr></table>### 4. 复制id_rsa.pub里面的所有内容<ul><li><p>手动打开id_rsa.pub文件，复制里面的所有内容</p></li><li><p>直接在终端打开文件，复制生成内容，打开文件命令如下</p></li></ul><table><tr><td bgcolor="black"> <font size="3" color="white">cat ~/.ssh/id_rsa.pub </font></td></tr></table>### 5. 进入github配置ssh<p>然后进入进入自己的github页面，找到setting下的SSH：<a href="https://github.com/settings/ssh" target="_blank" rel="noopener">链接</a>  </p><p>依次执行下面步骤：点击 New SSH key —— Title：blog —— Key：输入刚才复制的内容 —— Add SSH key  </p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/addSSH.jpg?raw=true" alt="添加ssh的配置"></p><p><strong>d.</strong> 测试一下是否成功,输入下方命令：  </p><table><tr><td bgcolor="black"> <font size="3" color="white">$ ssh -T git@github.com   //Github的注册邮箱地址 </font></td></tr></table>  ![](https://github.com/HuanwenW/MyPostImag/blob/master/190410-boke/github-3.png?raw=true) &ensp;&ensp;&ensp;看到上面信息说明SSH已配置成功！  <h2 id="四-替换-config-yml-、thems、source-文件"><a href="#四-替换-config-yml-、thems、source-文件" class="headerlink" title="四. 替换_config.yml 、thems、source 文件"></a>四. 替换_config.yml 、thems、source 文件</h2><p>从<strong>windows</strong>电脑中复制_config.yml 、thems、source三个文件 ，替换<strong>mac</strong>下的_config.yml 、thems、source 三个文件，即可完成原主题的迁移</p><h2 id="五-主题相关设置专题"><a href="#五-主题相关设置专题" class="headerlink" title="五. 主题相关设置专题"></a>五. 主题相关设置专题</h2><p>此处不在啰嗦，完全参照<a href="https://github.com/Youthink/hexo-themes-yearn/wiki/主题使用教程-📖" target="_blank" rel="noopener">hexo搭建模版参照教程</a>的讲解</p><p>也可以参考我的<a href="https://huanwenw.github.io/2019/04/10/hexo-gitHub/" target="_blank" rel="noopener">window版本搭建hexo</a>中第四部分<strong>如何将github和hexo联系起来？</strong>的详细说明</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol><li><a href="http://gjincai.github.io/2017/01/13/hexo-从-windows-转移至-Mac/" target="_blank" rel="noopener">hexo从windows转移至Mac</a></li><li><a href="https://hankliu62.github.io/2017/09/09/hexo-github-blog-guide/" target="_blank" rel="noopener">MAC搭建个人博客hexo+github详细完整步骤</a></li><li><a href="https://blog.csdn.net/xy371661665/article/details/77528132" target="_blank" rel="noopener">Mac系统下安装和卸载HomeBrew的方法</a></li><li><a href="https://blog.csdn.net/qq_41234116/article/details/79366454" target="_blank" rel="noopener">Mac安装，简单使用，卸载homebrew详细教程</a></li><li><a href="https://blog.csdn.net/qq_39153421/article/details/89362432" target="_blank" rel="noopener">解决hexo -d 报错问题</a></li><li><a href="https://www.jianshu.com/p/60b3d5584afe" target="_blank" rel="noopener">npm权限问题</a></li><li><a href="https://www.jianshu.com/p/e72e94952d76" target="_blank" rel="noopener">mac下 ssh key 的获取</a></li><li><a href="https://github.com/Youthink/hexo-themes-yearn/wiki/主题使用教程-📖" target="_blank" rel="noopener">hexo搭建模版参照教程</a></li><li><a href="https://github.com/adrai/flowchart.js" target="_blank" rel="noopener">用<strong>flowchart.js</strong>画流程图</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;2019的年5月在惠普笔记本搭建了个hexo+github版人博客就；&lt;br&gt;2019的6月刚入手了一个mac，于是乎各种东西都得由wind
      
    
    </summary>
    
    
      <category term="技术篇" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>ubantu系统中的anaconda3下安装anaconda2</title>
    <link href="http://yoursite.com/2019/09/14/software-install/Annaconda3withAnaconda2/"/>
    <id>http://yoursite.com/2019/09/14/software-install/Annaconda3withAnaconda2/</id>
    <published>2019-09-14T13:55:27.000Z</published>
    <updated>2019-09-20T03:23:55.150Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>ubantu系统已经安装有anaconda3，但是要跑的实验使用的是python2.7，需要更换为anaconda2的环境</p><p><strong>注意：anaconda3下对应python3以上的版本，且无法降级python版本！</strong></p><h2 id="具体实现步骤"><a href="#具体实现步骤" class="headerlink" title="具体实现步骤"></a>具体实现步骤</h2><h2 id="1-下载anaconda2系列的安装包"><a href="#1-下载anaconda2系列的安装包" class="headerlink" title="1. 下载anaconda2系列的安装包"></a>1. 下载anaconda2系列的安装包</h2><p>​        <a href="https://repo.continuum.io/archive/" target="_blank" rel="noopener">下载地址</a> （我下载的：  Anaconda2-5.0.1-Linux-x86_64.sh）</p><h2 id="2-在软件所在位置的文件夹内打开终端"><a href="#2-在软件所在位置的文件夹内打开终端" class="headerlink" title="2. 在软件所在位置的文件夹内打开终端"></a>2. <strong>在软件所在位置的文件夹内打开终端</strong></h2><p>Terminal窗口切换到刚刚下载好的（Anaconda2-5.0.1-Linux-x86_64.sh）所在位置</p><h2 id="3-逐条执行以下9条命令-报错可能是权限问题，前面加sudo"><a href="#3-逐条执行以下9条命令-报错可能是权限问题，前面加sudo" class="headerlink" title="3. 逐条执行以下9条命令(报错可能是权限问题，前面加sudo)**"></a>3. <strong>逐条执行以下9条命令</strong>(报错可能是权限问题，前面加sudo)**</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bash Anaconda2-5.0.1-Linux-x86_64.sh -b -p <span class="variable">$HOME</span>/anaconda3/envs/py2</span><br></pre></td></tr></table></figure><p>其中，Anaconda2-5.0.1-Linux-x86_64.sh为所下载的anaconda2软件名，如果不一致需要替换；py2 为环境名称) </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ rm -f $HOME/anaconda3/envs/py2/bin/conda* </span><br><span class="line">$ rm -f $HOME/anaconda3/envs/py2/conda-meta/conda-*</span><br><span class="line">$ rm -f $HOME/anaconda3/envs/py2/bin/activate</span><br><span class="line">$ rm -f $HOME/anaconda3/envs/py2/bin/deactivate</span><br><span class="line">$ cd $HOME/anaconda3/envs/py2/bin</span><br><span class="line">$ ln -s ../../../bin/conda.</span><br><span class="line">$ ln -s ../../../bin/activate.</span><br><span class="line">$ ln -s ../../../bin/deactivate.</span><br></pre></td></tr></table></figure><h2 id="4-通过命令switch-python来查看当前Python的版本"><a href="#4-通过命令switch-python来查看当前Python的版本" class="headerlink" title="4. 通过命令switch python来查看当前Python的版本"></a>4. 通过命令switch python来查看当前Python的版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">switch python</span><br></pre></td></tr></table></figure><h2 id="5-通过命令source-activate-py2-来激活anaconda2的环境"><a href="#5-通过命令source-activate-py2-来激活anaconda2的环境" class="headerlink" title="5.通过命令source activate py2 来激活anaconda2的环境"></a>5.通过命令source activate py2 来激活anaconda2的环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source activate py2</span><br></pre></td></tr></table></figure><h2 id="6-通过命令source-deactivate-py2来返回anaconda3的环境"><a href="#6-通过命令source-deactivate-py2来返回anaconda3的环境" class="headerlink" title="6. 通过命令source deactivate py2来返回anaconda3的环境"></a>6. 通过命令source deactivate py2来返回anaconda3的环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source deactivate py2</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/maquanyu/Sunflower-Collection/blob/master/anaconda2和anaconda3共存" target="_blank" rel="noopener">anaconda3下安装anaconda2</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;ubantu系统已经安装有anaconda3，但是要跑的实验使用的是python2.7，需要更换为anaconda2的环境&lt;/p&gt;
&lt;p&gt;&lt;
      
    
    </summary>
    
    
      <category term="装机篇" scheme="http://yoursite.com/categories/%E8%A3%85%E6%9C%BA%E7%AF%87/"/>
    
    
      <category term="software install" scheme="http://yoursite.com/tags/software-install/"/>
    
  </entry>
  
  <entry>
    <title>ubantu 虚拟环境创建</title>
    <link href="http://yoursite.com/2019/09/14/software-install/Create%20a%20virtual%20environment/"/>
    <id>http://yoursite.com/2019/09/14/software-install/Create a virtual environment/</id>
    <published>2019-09-14T12:55:27.000Z</published>
    <updated>2019-09-14T12:45:03.157Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在配置别人的实验环境时，根据作者提供的环境条件逐条安装往往太慢….通常作者会在实验中给requirements.txt文件（里面为实验环境版本配置信息），以下方法介绍如何一次性安装实验所依赖的各种包！</p><h2 id="0-打开Terminal（pycharm下）"><a href="#0-打开Terminal（pycharm下）" class="headerlink" title="0. 打开Terminal（pycharm下）"></a>0. 打开<strong>Terminal</strong>（pycharm下）</h2><p>先在pycharm所打开的项目，下方菜单切换到项目的Terminal中进行，这样就是对当前项目配备环境。</p><h2 id="1-创建虚拟环境"><a href="#1-创建虚拟环境" class="headerlink" title="1.创建虚拟环境"></a>1.创建虚拟环境</h2><table><tr><td bgcolor="black"> <font size="3" color="white"> conda  create  -n  自己虚拟环境的名字 python=3.6（3.6是当前版本号，版本号也可省略） </font></td></tr></table>  <p>执行过程中，需要输入 y</p><h2 id="2-激活虚拟环境–2种方式"><a href="#2-激活虚拟环境–2种方式" class="headerlink" title="2. 激活虚拟环境–2种方式"></a>2. 激活虚拟环境–2种方式</h2><table><tr><td bgcolor="black"> <font size="3" color="white"> source activate + 自己虚拟环境的名字（方法1） </font></td></tr></table>  <table><tr><td bgcolor="black"> <font size="3" color="white"> conda activate + 自己虚拟环境的名字（方法 2） </font></td></tr></table>  <h2 id="3-安装所需环境（一般作者把需要的环境写在requirements-txt中-）"><a href="#3-安装所需环境（一般作者把需要的环境写在requirements-txt中-）" class="headerlink" title="3.安装所需环境（一般作者把需要的环境写在requirements.txt中 ）"></a>3.安装所需环境（一般作者把需要的环境写在requirements.txt中 ）</h2><table><tr><td bgcolor="black"> <font size="3" color="white"> pip install  -r  requirements.txt </font></td></tr></table> <p>即使requirements.txt中所需的环境<strong>已安装也没关系</strong>，系统会自动解决</p><h2 id="4-查看是否安装成功"><a href="#4-查看是否安装成功" class="headerlink" title="4.查看是否安装成功"></a>4.查看是否安装成功</h2><p>打开电脑的Terminals窗口 ，输入以下命令，会显示电脑中所有的虚拟环境，确认刚刚创建的虚拟环境是否包含在里面。</p><table><tr><td bgcolor="black"> <font size="3" color="white"> conda env list </font></td></tr></table> <h2 id="5-配置实验环境"><a href="#5-配置实验环境" class="headerlink" title="5. 配置实验环境"></a>5. 配置实验环境</h2><p>依次点击pycharm下的Project–seeting–add（而不是show all）–切换conda环境–自动检测出刚安装的环境—项目设置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;在配置别人的实验环境时，根据作者提供的环境条件逐条安装往往太慢….通常作者会在实验中给requirements.txt文件（里面为实验环境版
      
    
    </summary>
    
    
      <category term="技术篇" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
  </entry>
  
  <entry>
    <title>关于转载</title>
    <link href="http://yoursite.com/2019/09/12/software-install/copyright-reprinted/"/>
    <id>http://yoursite.com/2019/09/12/software-install/copyright-reprinted/</id>
    <published>2019-09-12T13:55:27.000Z</published>
    <updated>2019-09-14T03:42:39.387Z</updated>
    
    <content type="html"><![CDATA[<h2 id="我希望的转载方式"><a href="#我希望的转载方式" class="headerlink" title="我希望的转载方式"></a>我希望的转载方式</h2><p><strong>分享链接转载，指向我的博文。</strong> 我觉的这是最好的转载方式，互赢。</p><h2 id="使用别人的原创"><a href="#使用别人的原创" class="headerlink" title="使用别人的原创"></a>使用别人的原创</h2><p>换位思考，以后我使用别人的图片和摘选的内容时，我会带上来源地址和作者署名，尊重原创</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;我希望的转载方式&quot;&gt;&lt;a href=&quot;#我希望的转载方式&quot; class=&quot;headerlink&quot; title=&quot;我希望的转载方式&quot;&gt;&lt;/a&gt;我希望的转载方式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;分享链接转载，指向我的博文。&lt;/strong&gt; 我觉的这是最好的转载方式，互
      
    
    </summary>
    
    
      <category term="版权声明" scheme="http://yoursite.com/categories/%E7%89%88%E6%9D%83%E5%A3%B0%E6%98%8E/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>MacBook Pro 识别希捷移动硬盘</title>
    <link href="http://yoursite.com/2019/09/12/software-install/mac+xijieHarddisk/"/>
    <id>http://yoursite.com/2019/09/12/software-install/mac+xijieHarddisk/</id>
    <published>2019-09-12T07:55:27.000Z</published>
    <updated>2019-09-14T08:33:11.005Z</updated>
    
    <content type="html"><![CDATA[<p>内心OS：被困扰18个小时的question，终于解决，只因思路不清晰，走了很多弯路，太蠢！–20190912</p><p><strong>悟！</strong>：很多博客只是针对自己电脑遇到的问题给出解决方案，官网是针对所有电脑给出的解决方案，而且官网给出的说明更简洁且可靠！</p><h2 id="设备描述"><a href="#设备描述" class="headerlink" title="设备描述"></a>设备描述</h2><ul><li><p>MacBcook Pro -2018 version：10.14.3 </p></li><li><p>希捷硬盘购买信息：希捷(Seagate) 1TB USB3.0 移动硬盘 睿品新版铭 兼容Mac</p></li></ul><h2 id="问题解决步骤"><a href="#问题解决步骤" class="headerlink" title="问题解决步骤"></a>问题解决步骤</h2><ol><li><p><a href="https://www.seagate.com/cn/zh/support/downloads/" target="_blank" rel="noopener">希捷官网</a>下载 Paragon 驱动程序（注意mac版本）</p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/0-download%20driver.jpg?raw=true" alt="官网下载界面"></p></li><li><p>下载完成后双击软件，按照提示步骤完成安装</p></li><li><p>重启Mac</p></li><li><p>将希捷硬盘插入mac</p></li><li><p>打开 <strong>NTFS for Mac</strong> 软件，发现移动硬盘已显示，操作如下图</p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/2-disk%20installation.jpg?raw=true" alt="借助第三方软件安装硬盘"></p></li><li><p>修改移动硬盘名称（若不需要可以直接执行第7步）</p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/4-rename.jpg?raw=true" alt="移动硬盘重命名"></p></li><li><p>点击 右侧 磁盘名称，即可正常访问磁盘</p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190912-mac/3-disk%20view.jpg?raw=true" alt="访问移动硬盘"></p></li></ol><h2 id="问题解答"><a href="#问题解答" class="headerlink" title="问题解答"></a>问题解答</h2><ol><li><p>如何修改硬盘名称？</p><p>参见步骤6</p></li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>1.<a href="https://www.bilibili.com/video/av8611848/" target="_blank" rel="noopener">如何在Mac系统下正确使用硬盘-视频讲解</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;内心OS：被困扰18个小时的question，终于解决，只因思路不清晰，走了很多弯路，太蠢！–20190912&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;悟！&lt;/strong&gt;：很多博客只是针对自己电脑遇到的问题给出解决方案，官网是针对所有电脑给出的解决方案，而且官网给出的说明更简洁且
      
    
    </summary>
    
    
      <category term="技术篇" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Typora（一款比Markdown更好用的软件编辑器）使用方法简介.md</title>
    <link href="http://yoursite.com/2019/09/10/software-install/Typora%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2019/09/10/software-install/Typora使用方法简介/</id>
    <published>2019-09-10T13:55:27.000Z</published>
    <updated>2019-09-19T12:18:11.918Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Typora编辑器使用方法–参考博客链接"><a href="#Typora编辑器使用方法–参考博客链接" class="headerlink" title="Typora编辑器使用方法–参考博客链接"></a><a href="https://blog.csdn.net/wirelessqa/article/details/70432631" target="_blank" rel="noopener">Typora编辑器使用方法–参考博客链接</a></h3><p><a href="https://www.cnblogs.com/peizhe123/p/7994746.html" target="_blank" rel="noopener">Mac下使用Typora的一些简单操作</a></p><ol><li>三个 ~ (英文状态下的波浪线) 回车 就可以输入<strong>代码块</strong>,如果想让显示行数，需要开启，在Typora–&gt;偏好设置–&gt;Markdown 设置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>粗体</strong>、<em>斜体</em>、==高亮==、<del>删除线</del>、<u>下划线</u>、我是^上标^、我是 <del>下标</del>、<a href="http://www.baidu.com" target="_blank" rel="noopener">超链接</a></p><p>  <img src="https://img3.doubanio.com/view/movie_poster_cover/lpst/public/p2411953504.jpg" alt="示例图片"></p><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><ul><li><p>无序列表1</p></li><li><p>无序列表2</p><h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2></li></ul><ol><li><p>有序列表</p></li><li><p>有序列表</p><h2 id="任务列表"><a href="#任务列表" class="headerlink" title="任务列表"></a>任务列表</h2></li></ol><ul><li><input disabled type="checkbox"> <p>看电影</p></li><li><input disabled type="checkbox"> <p>听音乐</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Typora编辑器使用方法–参考博客链接&quot;&gt;&lt;a href=&quot;#Typora编辑器使用方法–参考博客链接&quot; class=&quot;headerlink&quot; title=&quot;Typora编辑器使用方法–参考博客链接&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://blog.csdn
      
    
    </summary>
    
    
      <category term="技术篇" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF%E7%AF%87/"/>
    
    
      <category term="软件安装" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>softwaerVersion</title>
    <link href="http://yoursite.com/2019/05/11/software-install/softwaerVersionInquery/"/>
    <id>http://yoursite.com/2019/05/11/software-install/softwaerVersionInquery/</id>
    <published>2019-05-11T03:57:15.000Z</published>
    <updated>2019-05-11T04:54:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Ubantu-系统"><a href="#Ubantu-系统" class="headerlink" title="Ubantu 系统"></a>Ubantu 系统</h2><p>本文为在为Ubantu系统安装tensorflow时，因为已有一些软件的安装，所以需要查看确认下</p><p><strong>首先 快捷键（Ctrl+Alt+t）打开终端</strong></p><h2 id="CUDA"><a href="#CUDA" class="headerlink" title="CUDA"></a>CUDA</h2><blockquote><p>nvcc -V  </p></blockquote><p>！！ 注意 V 是大写</p><h2 id="CUDNN"><a href="#CUDNN" class="headerlink" title="CUDNN"></a>CUDNN</h2><blockquote><p>cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR  </p></blockquote><h2 id="GCC"><a href="#GCC" class="headerlink" title="GCC"></a>GCC</h2><p>gcc -v</p><p>！！ 注意 v 是小写</p><h2 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h2><blockquote><p>conda -V</p></blockquote><p>！！ 注意 V 是大写  </p><h2 id="Ubantu"><a href="#Ubantu" class="headerlink" title="Ubantu"></a>Ubantu</h2><blockquote><ol><li>cat /proc/version  </li><li>uname -a  </li><li>lsb_release -a  </li></ol></blockquote><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><p>1.<a href="https://medium.com/@changrongko/nv-how-to-check-cuda-and-cudnn-version-e05aa21daf6c" target="_blank" rel="noopener">查看 CUDA cudnn 版本</a>  </p><ol start="2"><li><a href="https://jingyan.baidu.com/article/2c8c281d87c9890009252a41.html" target="_blank" rel="noopener">ubuntu查看gcc的版本</a>   </li><li><a href="https://blog.csdn.net/wyx100/article/details/79453941" target="_blank" rel="noopener">查看Anaconda版本、Anaconda和python版本对应关系和快速下载</a>     </li><li><a href="https://zhidao.baidu.com/question/154707237.html?fr=iks&word=%C8%E7%BA%CE%D3%C3%C3%FC%C1%EE%B2%E9%D1%AF+Ubantu+%B0%E6%B1%BE%BA%C5&ie=gbk" target="_blank" rel="noopener">如何用命令查询 Ubantu 版本号</a>  </li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Ubantu-系统&quot;&gt;&lt;a href=&quot;#Ubantu-系统&quot; class=&quot;headerlink&quot; title=&quot;Ubantu 系统&quot;&gt;&lt;/a&gt;Ubantu 系统&lt;/h2&gt;&lt;p&gt;本文为在为Ubantu系统安装tensorflow时，因为已有一些软件的安装，所以需
      
    
    </summary>
    
    
      <category term="software" scheme="http://yoursite.com/categories/software/"/>
    
    
      <category term="Version" scheme="http://yoursite.com/tags/Version/"/>
    
  </entry>
  
  <entry>
    <title>推荐系统评价--NDCG方法概述</title>
    <link href="http://yoursite.com/2019/05/02/MachineLearning/RSC-NDCG/"/>
    <id>http://yoursite.com/2019/05/02/MachineLearning/RSC-NDCG/</id>
    <published>2019-05-02T07:48:25.000Z</published>
    <updated>2019-05-02T09:14:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NDCG方法概述"><a href="#NDCG方法概述" class="headerlink" title="NDCG方法概述"></a>NDCG方法概述</h2><p><strong>NDCG(Normalized Discounted Cumulative Gain)</strong>：计算相对复杂。对于排在结位置n处的NDCG的计算公式如下图所示：<br><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190502-Res/NDCG.png?raw=true" alt="NDCG公式">  </p><p>&ensp;&ensp;&ensp;一个推荐系统返回一些项并形成一个列表，我们想要计算这个列表有多好。每一项都有一个相关的评分值，通常这些评分值是一个非负数。这就是<strong>gain（增益）</strong>。此外，对于这些没有用户反馈的项，我们通常设置其增益为0。 </p><p><strong>例如：假设有两个主题，主题1有4个相关网页，主题2有5个相关网页。</strong>  </p><p>(1) 相关度分成从0到r的r+1的等级(r可设定)。当取r=5时，等级设定如下图所示：</p><p><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190502-Res/NDCG-gain.png?raw=true" alt="NDCG-增益"><br>(应该还有r=1那一级，原文档有误，不过这里不影响理解)   </p><p>(2) 例如现在有一个query={abc}，返回下图左列的Ranked List(URL)，当假设用户的选择与排序结果无关(即每一级都等概率被选中)，则生成的累计增益值如下图最右列所示：<br><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190502-Res/NDCG-CumulativeGain.png?raw=true" alt="NDCG-累计增益"><br>&ensp;&ensp;&ensp;我们把这些分数相加，也就是<strong>Cumulative Gain（累积增益）</strong>。我们更愿意看那些位于列表前面的最相关的项，因此，在把这些分数相加之前，我们将每项除以一个递增的数（通常是该项位置的对数值），也就是折损值，并得到DCG。 </p><p>(3) 考虑到一般情况下用户会优先点选排在前面的搜索结果，所以应该引入一个折算因子(discounting factor): log(2)/log(1+rank)。这时将获得DCG值(Discounted Cumulative Gain)如下如所示：<br><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190502-Res/NDCG-gain.png?raw=true" alt="NDCG-折算因子">    </p><p>(4) &ensp;&ensp;&ensp;在用户与用户之间，DCGs没有直接的可比性，所以我们要对它们进行归一化处理。即为了使不同等级上的搜索结果的得分值容易比较，需要将DCG值归一化的到NDCG值。操作如下图所示，首先计算理想返回结果List的DCG值：<br><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190502-Res/NDCG-Normalized.png?raw=true" alt="NDCG-归一化">  </p><p>(5) 然后用DCG/MaxDCG就得到NDCG值，如下图所示：<br><img src="https://github.com/HuanwenW/MyPostImag/blob/master/190502-Res/NDCG-gain.png?raw=true" alt="NDCG-比值">    </p><p>&ensp;&ensp;&ensp; 最糟糕的情况是，当使用非负相关评分时DCG为0。为了得到最好的，我们把测试集中所有的条目置放在理想的次序下，采取的是前K项并计算它们的DCG。然后将原DCG除以理想状态下的DCG并得到<strong>NDCG@K</strong>，它是一个0到1之间的数。<br>&ensp;&ensp;&ensp;你可能已经注意到，我们使用K表示推荐列表的长度。这个数由专业人员指定。你可以把它想像成是一个用户可能会注意到的多少个项的一个估计值，如10或50这些比较常见的值。</p><h2 id="参考博客"><a href="#参考博客" class="headerlink" title="参考博客"></a>参考博客</h2><ol><li><a href="https://blog.csdn.net/u010670689/article/details/73196054" target="_blank" rel="noopener"><strong>推荐系统评价：NDCG方法概述</strong></a>  </li><li><a href="https://blog.csdn.net/lujiandong1/article/details/77123805" target="_blank" rel="noopener">NDCG及其实现</a>  </li><li><a href="https://blog.csdn.net/weixin_38405636/article/details/80675312" target="_blank" rel="noopener">排序算法常用评价指标计算方式（AUC,MAP,NDCG,MRR）</a>  </li><li><a href="https://www.cnblogs.com/eyeszjwang/articles/2368087.html" target="_blank" rel="noopener"><strong>Learning to Rank for IR的评价指标—MAP,NDCG,MRR</strong></a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;NDCG方法概述&quot;&gt;&lt;a href=&quot;#NDCG方法概述&quot; class=&quot;headerlink&quot; title=&quot;NDCG方法概述&quot;&gt;&lt;/a&gt;NDCG方法概述&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;NDCG(Normalized Discounted Cumulative 
      
    
    </summary>
    
    
      <category term="Res" scheme="http://yoursite.com/categories/Res/"/>
    
    
      <category term="推荐系统" scheme="http://yoursite.com/tags/%E6%8E%A8%E8%8D%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
